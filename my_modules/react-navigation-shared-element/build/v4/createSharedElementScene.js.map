{"version":3,"file":"createSharedElementScene.js","sourceRoot":"","sources":["../../src/v4/createSharedElementScene.tsx"],"names":[],"mappings":"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","sourcesContent":["import hoistNonReactStatics from \"hoist-non-react-statics\";\nimport * as React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { nodeFromRef } from \"react-native-shared-element\";\n\nimport { ISharedElementRendererData } from \"../SharedElementRendererData\";\nimport SharedElementSceneContext from \"../SharedElementSceneContext\";\nimport SharedElementSceneData from \"../SharedElementSceneData\";\nimport { SharedElementSceneComponent, SharedElementRoute } from \"../types\";\nimport { NavigationProp, Route } from \"./types\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\ntype PropsType = {\n  navigation: NavigationProp;\n};\n\nfunction routeFromNavigation(navigation: any): SharedElementRoute {\n  return {\n    key: navigation.state.key,\n    name: navigation.state.routeName,\n    params: navigation.state.params || {},\n  };\n}\n\nexport function getActiveRouteState(route: any): Route {\n  if (\n    !route.routes ||\n    route.routes.length === 0 ||\n    route.index >= route.routes.length\n  ) {\n    return route;\n  } else {\n    return getActiveRouteState(route.routes[route.index]);\n  }\n}\n\nfunction createSharedElementScene(\n  Component: SharedElementSceneComponent,\n  rendererData: ISharedElementRendererData,\n  AnimationContext: any,\n  navigatorId: string,\n  verbose: boolean\n): React.ComponentType<any> {\n  class SharedElementSceneView extends React.PureComponent<PropsType> {\n    private subscriptions: {\n      [key: string]: {\n        remove(): void;\n      };\n    } = {};\n    private sceneData: SharedElementSceneData = new SharedElementSceneData(\n      Component,\n      () => Component.sharedElements,\n      routeFromNavigation(this.props.navigation),\n      navigatorId,\n      rendererData.nestingDepth,\n      verbose\n    );\n\n    componentDidMount() {\n      const { navigation } = this.props;\n      this.subscriptions = {\n        willFocus: navigation.addListener(\"willFocus\", this.onWillFocus),\n        didFocus: navigation.addListener(\"didFocus\", this.onDidFocus),\n        willBlur: navigation.addListener(\"willBlur\", this.onWillBlur),\n      };\n    }\n\n    componentWillUnmount() {\n      Object.values(this.subscriptions).forEach((subscription) =>\n        subscription.remove()\n      );\n    }\n\n    render() {\n      // console.log('SharedElementSceneView.render');\n      return (\n        <SharedElementSceneContext.Provider value={this.sceneData}>\n          <View\n            style={styles.container}\n            collapsable={false}\n            ref={this.onSetRef}\n          >\n            <AnimationContext.Consumer>\n              {this.onRenderAnimationContext}\n            </AnimationContext.Consumer>\n            <Component {...this.props} />\n          </View>\n        </SharedElementSceneContext.Provider>\n      );\n    }\n\n    private onRenderAnimationContext = (value: any) => {\n      this.sceneData.setAnimimationContextValue(value);\n    };\n\n    componentDidUpdate() {\n      this.sceneData.updateRoute(routeFromNavigation(this.props.navigation));\n    }\n\n    private onSetRef = (ref: any) => {\n      this.sceneData.setAncestor(nodeFromRef(ref));\n    };\n\n    private onWillFocus = () => {\n      const { navigation } = this.props;\n      const activeRoute = getActiveRouteState(navigation.state);\n      //console.log('onWillFocus: ', navigation.state, activeRoute);\n      if (navigation.state.routeName === activeRoute.routeName) {\n        this.sceneData.updateRoute(routeFromNavigation(navigation));\n        rendererData.updateSceneState(this.sceneData, \"willFocus\");\n      }\n    };\n\n    private onDidFocus = () => {\n      const { navigation } = this.props;\n      const activeRoute = getActiveRouteState(navigation.state);\n      if (navigation.state.routeName === activeRoute.routeName) {\n        // console.log('onDidFocus: ', this.sceneData.name, navigation);\n        this.sceneData.updateRoute(routeFromNavigation(navigation));\n        rendererData.updateSceneState(this.sceneData, \"didFocus\");\n      }\n    };\n\n    private onWillBlur = () => {\n      const { navigation } = this.props;\n      const activeRoute = getActiveRouteState(navigation.state);\n      //console.log('onWillBlur: ', navigation.state, activeRoute);\n      if (navigation.state.routeName === activeRoute.routeName) {\n        this.sceneData.updateRoute(routeFromNavigation(navigation));\n        rendererData.updateSceneState(this.sceneData, \"willBlur\");\n      }\n    };\n  }\n\n  hoistNonReactStatics(SharedElementSceneView, Component);\n  return SharedElementSceneView;\n}\n\nexport default createSharedElementScene;\n"]}